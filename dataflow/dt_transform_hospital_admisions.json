{
	"name": "dt_transform_hospital_admisions",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "df_hospital_admission_ds",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionSource"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "SelectReqdFields",
					"description": "Renaming HospitalAdmissionSource to selectReqFields with columns 'country, indicator, date, year_week, value, source, url'"
				},
				{
					"name": "LookupCountry"
				},
				{
					"name": "selectreqdfields2"
				},
				{
					"name": "Condition"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as string,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionSource",
				"HospitalAdmissionSource select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectReqdFields",
				"SelectReqdFields lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupCountry",
				"LookupCountry select(mapColumn(",
				"          indicator,",
				"          reported_date,",
				"          year_week,",
				"          value,",
				"          source,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          continent",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectreqdfields2",
				"selectreqdfields2 split(indicator == 'Weekly new hospital admission per 100k' || indicator == 'Weekly ICU admission per 100k',",
				"     disjoint: false) ~> Condition@(Weekly, Daily)"
			]
		}
	}
}